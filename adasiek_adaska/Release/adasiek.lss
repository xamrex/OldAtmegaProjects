
adasiek.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003dc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
  6c:	78 94       	sei
  6e:	bb 9a       	sbi	0x17, 3	; 23
  70:	83 b7       	in	r24, 0x33	; 51
  72:	81 60       	ori	r24, 0x01	; 1
  74:	83 bf       	out	0x33, r24	; 51
  76:	83 b7       	in	r24, 0x33	; 51
  78:	80 64       	ori	r24, 0x40	; 64
  7a:	83 bf       	out	0x33, r24	; 51
  7c:	83 b7       	in	r24, 0x33	; 51
  7e:	80 63       	ori	r24, 0x30	; 48
  80:	83 bf       	out	0x33, r24	; 51
  82:	83 e3       	ldi	r24, 0x33	; 51
  84:	8c bf       	out	0x3c, r24	; 60
  86:	ff cf       	rjmp	.-2      	; 0x86 <main+0x1a>

00000088 <lcd_sendHalf>:
  88:	80 ff       	sbrs	r24, 0
  8a:	02 c0       	rjmp	.+4      	; 0x90 <lcd_sendHalf+0x8>
  8c:	db 9a       	sbi	0x1b, 3	; 27
  8e:	01 c0       	rjmp	.+2      	; 0x92 <lcd_sendHalf+0xa>
  90:	db 98       	cbi	0x1b, 3	; 27
  92:	81 ff       	sbrs	r24, 1
  94:	02 c0       	rjmp	.+4      	; 0x9a <lcd_sendHalf+0x12>
  96:	dc 9a       	sbi	0x1b, 4	; 27
  98:	01 c0       	rjmp	.+2      	; 0x9c <lcd_sendHalf+0x14>
  9a:	dc 98       	cbi	0x1b, 4	; 27
  9c:	82 ff       	sbrs	r24, 2
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <lcd_sendHalf+0x1c>
  a0:	dd 9a       	sbi	0x1b, 5	; 27
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <lcd_sendHalf+0x1e>
  a4:	dd 98       	cbi	0x1b, 5	; 27
  a6:	83 ff       	sbrs	r24, 3
  a8:	02 c0       	rjmp	.+4      	; 0xae <lcd_sendHalf+0x26>
  aa:	de 9a       	sbi	0x1b, 6	; 27
  ac:	08 95       	ret
  ae:	de 98       	cbi	0x1b, 6	; 27
  b0:	08 95       	ret

000000b2 <lcd_readHalf>:
  b2:	89 b3       	in	r24, 0x19	; 25
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	23 e0       	ldi	r18, 0x03	; 3
  b8:	96 95       	lsr	r25
  ba:	87 95       	ror	r24
  bc:	2a 95       	dec	r18
  be:	e1 f7       	brne	.-8      	; 0xb8 <lcd_readHalf+0x6>
  c0:	81 70       	andi	r24, 0x01	; 1
  c2:	cc 99       	sbic	0x19, 4	; 25
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	cd 99       	sbic	0x19, 5	; 25
  c8:	84 60       	ori	r24, 0x04	; 4
  ca:	ce 99       	sbic	0x19, 6	; 25
  cc:	88 60       	ori	r24, 0x08	; 8
  ce:	08 95       	ret

000000d0 <_lcd_read_byte>:
  d0:	1f 93       	push	r17
  d2:	d6 98       	cbi	0x1a, 6	; 26
  d4:	d5 98       	cbi	0x1a, 5	; 26
  d6:	d4 98       	cbi	0x1a, 4	; 26
  d8:	d3 98       	cbi	0x1a, 3	; 26
  da:	d9 9a       	sbi	0x1b, 1	; 27
  dc:	da 9a       	sbi	0x1b, 2	; 27
  de:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_readHalf>
  e2:	18 2f       	mov	r17, r24
  e4:	12 95       	swap	r17
  e6:	10 7f       	andi	r17, 0xF0	; 240
  e8:	da 98       	cbi	0x1b, 2	; 27
  ea:	da 9a       	sbi	0x1b, 2	; 27
  ec:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_readHalf>
  f0:	da 98       	cbi	0x1b, 2	; 27
  f2:	81 2b       	or	r24, r17
  f4:	1f 91       	pop	r17
  f6:	08 95       	ret

000000f8 <check_BF>:
  f8:	d8 98       	cbi	0x1b, 0	; 27
  fa:	0e 94 68 00 	call	0xd0	; 0xd0 <_lcd_read_byte>
  fe:	08 95       	ret

00000100 <_lcd_write_byte>:
 100:	1f 93       	push	r17
 102:	18 2f       	mov	r17, r24
 104:	d6 9a       	sbi	0x1a, 6	; 26
 106:	d5 9a       	sbi	0x1a, 5	; 26
 108:	d4 9a       	sbi	0x1a, 4	; 26
 10a:	d3 9a       	sbi	0x1a, 3	; 26
 10c:	d9 98       	cbi	0x1b, 1	; 27
 10e:	da 9a       	sbi	0x1b, 2	; 27
 110:	82 95       	swap	r24
 112:	8f 70       	andi	r24, 0x0F	; 15
 114:	0e 94 44 00 	call	0x88	; 0x88 <lcd_sendHalf>
 118:	da 98       	cbi	0x1b, 2	; 27
 11a:	da 9a       	sbi	0x1b, 2	; 27
 11c:	81 2f       	mov	r24, r17
 11e:	0e 94 44 00 	call	0x88	; 0x88 <lcd_sendHalf>
 122:	da 98       	cbi	0x1b, 2	; 27
 124:	0e 94 7c 00 	call	0xf8	; 0xf8 <check_BF>
 128:	87 fd       	sbrc	r24, 7
 12a:	fc cf       	rjmp	.-8      	; 0x124 <_lcd_write_byte+0x24>
 12c:	1f 91       	pop	r17
 12e:	08 95       	ret

00000130 <lcd_write_cmd>:
 130:	d8 98       	cbi	0x1b, 0	; 27
 132:	0e 94 80 00 	call	0x100	; 0x100 <_lcd_write_byte>
 136:	08 95       	ret

00000138 <lcd_write_data>:
 138:	d8 9a       	sbi	0x1b, 0	; 27
 13a:	0e 94 80 00 	call	0x100	; 0x100 <_lcd_write_byte>
 13e:	08 95       	ret

00000140 <lcd_char>:
 140:	98 2f       	mov	r25, r24
 142:	80 58       	subi	r24, 0x80	; 128
 144:	88 30       	cpi	r24, 0x08	; 8
 146:	08 f4       	brcc	.+2      	; 0x14a <lcd_char+0xa>
 148:	97 70       	andi	r25, 0x07	; 7
 14a:	89 2f       	mov	r24, r25
 14c:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 150:	08 95       	ret

00000152 <lcd_str>:
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	ec 01       	movw	r28, r24
 158:	08 c0       	rjmp	.+16     	; 0x16a <lcd_str+0x18>
 15a:	89 2f       	mov	r24, r25
 15c:	80 58       	subi	r24, 0x80	; 128
 15e:	88 30       	cpi	r24, 0x08	; 8
 160:	08 f4       	brcc	.+2      	; 0x164 <lcd_str+0x12>
 162:	97 70       	andi	r25, 0x07	; 7
 164:	89 2f       	mov	r24, r25
 166:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 16a:	99 91       	ld	r25, Y+
 16c:	99 23       	and	r25, r25
 16e:	a9 f7       	brne	.-22     	; 0x15a <lcd_str+0x8>
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <lcd_str_P>:
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	ec 01       	movw	r28, r24
 17c:	0a c0       	rjmp	.+20     	; 0x192 <lcd_str_P+0x1c>
 17e:	89 2f       	mov	r24, r25
 180:	80 58       	subi	r24, 0x80	; 128
 182:	88 30       	cpi	r24, 0x08	; 8
 184:	10 f0       	brcs	.+4      	; 0x18a <lcd_str_P+0x14>
 186:	89 2f       	mov	r24, r25
 188:	02 c0       	rjmp	.+4      	; 0x18e <lcd_str_P+0x18>
 18a:	89 2f       	mov	r24, r25
 18c:	87 70       	andi	r24, 0x07	; 7
 18e:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 192:	fe 01       	movw	r30, r28
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	94 91       	lpm	r25, Z+
 198:	99 23       	and	r25, r25
 19a:	89 f7       	brne	.-30     	; 0x17e <lcd_str_P+0x8>
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	08 95       	ret

000001a2 <lcd_defchar>:
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	eb 01       	movw	r28, r22
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	87 70       	andi	r24, 0x07	; 7
 1ae:	90 70       	andi	r25, 0x00	; 0
 1b0:	08 96       	adiw	r24, 0x08	; 8
 1b2:	88 0f       	add	r24, r24
 1b4:	88 0f       	add	r24, r24
 1b6:	88 0f       	add	r24, r24
 1b8:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 1bc:	10 e0       	ldi	r17, 0x00	; 0
 1be:	89 91       	ld	r24, Y+
 1c0:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 1c4:	1f 5f       	subi	r17, 0xFF	; 255
 1c6:	18 30       	cpi	r17, 0x08	; 8
 1c8:	d1 f7       	brne	.-12     	; 0x1be <lcd_defchar+0x1c>
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	08 95       	ret

000001d2 <lcd_defchar_P>:
 1d2:	0f 93       	push	r16
 1d4:	1f 93       	push	r17
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	8b 01       	movw	r16, r22
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	87 70       	andi	r24, 0x07	; 7
 1e0:	90 70       	andi	r25, 0x00	; 0
 1e2:	08 96       	adiw	r24, 0x08	; 8
 1e4:	88 0f       	add	r24, r24
 1e6:	88 0f       	add	r24, r24
 1e8:	88 0f       	add	r24, r24
 1ea:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 1ee:	c0 e0       	ldi	r28, 0x00	; 0
 1f0:	d0 e0       	ldi	r29, 0x00	; 0
 1f2:	f8 01       	movw	r30, r16
 1f4:	ec 0f       	add	r30, r28
 1f6:	fd 1f       	adc	r31, r29
 1f8:	e4 91       	lpm	r30, Z+
 1fa:	8e 2f       	mov	r24, r30
 1fc:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 200:	21 96       	adiw	r28, 0x01	; 1
 202:	c8 30       	cpi	r28, 0x08	; 8
 204:	d1 05       	cpc	r29, r1
 206:	a9 f7       	brne	.-22     	; 0x1f2 <lcd_defchar_P+0x20>
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	1f 91       	pop	r17
 20e:	0f 91       	pop	r16
 210:	08 95       	ret

00000212 <lcd_locate>:
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	09 f4       	brne	.+2      	; 0x218 <lcd_locate+0x6>
 216:	80 e4       	ldi	r24, 0x40	; 64
 218:	60 58       	subi	r22, 0x80	; 128
 21a:	86 0f       	add	r24, r22
 21c:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 220:	08 95       	ret

00000222 <lcd_cls>:
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 228:	08 95       	ret

0000022a <lcd_init>:
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	d6 9a       	sbi	0x1a, 6	; 26
 230:	d5 9a       	sbi	0x1a, 5	; 26
 232:	d4 9a       	sbi	0x1a, 4	; 26
 234:	d3 9a       	sbi	0x1a, 3	; 26
 236:	d0 9a       	sbi	0x1a, 0	; 26
 238:	d2 9a       	sbi	0x1a, 2	; 26
 23a:	d1 9a       	sbi	0x1a, 1	; 26
 23c:	d8 98       	cbi	0x1b, 0	; 27
 23e:	da 98       	cbi	0x1b, 2	; 27
 240:	d9 98       	cbi	0x1b, 1	; 27
 242:	80 e3       	ldi	r24, 0x30	; 48
 244:	95 e7       	ldi	r25, 0x75	; 117
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <lcd_init+0x1c>
 24a:	d8 98       	cbi	0x1b, 0	; 27
 24c:	d9 98       	cbi	0x1b, 1	; 27
 24e:	80 e3       	ldi	r24, 0x30	; 48
 250:	0e 94 44 00 	call	0x88	; 0x88 <lcd_sendHalf>
 254:	88 e0       	ldi	r24, 0x08	; 8
 256:	90 e2       	ldi	r25, 0x20	; 32
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <lcd_init+0x2e>
 25c:	80 e3       	ldi	r24, 0x30	; 48
 25e:	0e 94 44 00 	call	0x88	; 0x88 <lcd_sendHalf>
 262:	08 ec       	ldi	r16, 0xC8	; 200
 264:	10 e0       	ldi	r17, 0x00	; 0
 266:	c8 01       	movw	r24, r16
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <lcd_init+0x3e>
 26c:	80 e2       	ldi	r24, 0x20	; 32
 26e:	0e 94 44 00 	call	0x88	; 0x88 <lcd_sendHalf>
 272:	c8 01       	movw	r24, r16
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <lcd_init+0x4a>
 278:	88 e2       	ldi	r24, 0x28	; 40
 27a:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 27e:	88 e0       	ldi	r24, 0x08	; 8
 280:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 284:	8c e0       	ldi	r24, 0x0C	; 12
 286:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 28a:	86 e0       	ldi	r24, 0x06	; 6
 28c:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 290:	0e 94 11 01 	call	0x222	; 0x222 <lcd_cls>
 294:	1f 91       	pop	r17
 296:	0f 91       	pop	r16
 298:	08 95       	ret

0000029a <lcd_defchar_E>:
 29a:	0f 93       	push	r16
 29c:	1f 93       	push	r17
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	8b 01       	movw	r16, r22
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	87 70       	andi	r24, 0x07	; 7
 2a8:	90 70       	andi	r25, 0x00	; 0
 2aa:	08 96       	adiw	r24, 0x08	; 8
 2ac:	88 0f       	add	r24, r24
 2ae:	88 0f       	add	r24, r24
 2b0:	88 0f       	add	r24, r24
 2b2:	0e 94 98 00 	call	0x130	; 0x130 <lcd_write_cmd>
 2b6:	c0 e0       	ldi	r28, 0x00	; 0
 2b8:	d0 e0       	ldi	r29, 0x00	; 0
 2ba:	c8 01       	movw	r24, r16
 2bc:	8c 0f       	add	r24, r28
 2be:	9d 1f       	adc	r25, r29
 2c0:	0e 94 c0 01 	call	0x380	; 0x380 <__eerd_byte_m32>
 2c4:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 2c8:	21 96       	adiw	r28, 0x01	; 1
 2ca:	c8 30       	cpi	r28, 0x08	; 8
 2cc:	d1 05       	cpc	r29, r1
 2ce:	a9 f7       	brne	.-22     	; 0x2ba <lcd_defchar_E+0x20>
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	1f 91       	pop	r17
 2d6:	0f 91       	pop	r16
 2d8:	08 95       	ret

000002da <lcd_str_E>:
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	ec 01       	movw	r28, r24
 2e0:	21 96       	adiw	r28, 0x01	; 1
 2e2:	0e 94 c0 01 	call	0x380	; 0x380 <__eerd_byte_m32>
 2e6:	98 2f       	mov	r25, r24
 2e8:	81 50       	subi	r24, 0x01	; 1
 2ea:	8e 3f       	cpi	r24, 0xFE	; 254
 2ec:	48 f4       	brcc	.+18     	; 0x300 <lcd_str_E+0x26>
 2ee:	8f 57       	subi	r24, 0x7F	; 127
 2f0:	88 30       	cpi	r24, 0x08	; 8
 2f2:	08 f4       	brcc	.+2      	; 0x2f6 <lcd_str_E+0x1c>
 2f4:	97 70       	andi	r25, 0x07	; 7
 2f6:	89 2f       	mov	r24, r25
 2f8:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_write_data>
 2fc:	ce 01       	movw	r24, r28
 2fe:	ef cf       	rjmp	.-34     	; 0x2de <lcd_str_E+0x4>
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	08 95       	ret

00000306 <lcd_int>:
 306:	df 93       	push	r29
 308:	cf 93       	push	r28
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	61 97       	sbiw	r28, 0x11	; 17
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
 31a:	be 01       	movw	r22, r28
 31c:	6f 5f       	subi	r22, 0xFF	; 255
 31e:	7f 4f       	sbci	r23, 0xFF	; 255
 320:	4a e0       	ldi	r20, 0x0A	; 10
 322:	50 e0       	ldi	r21, 0x00	; 0
 324:	0e 94 9f 01 	call	0x33e	; 0x33e <itoa>
 328:	0e 94 a9 00 	call	0x152	; 0x152 <lcd_str>
 32c:	61 96       	adiw	r28, 0x11	; 17
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	f8 94       	cli
 332:	de bf       	out	0x3e, r29	; 62
 334:	0f be       	out	0x3f, r0	; 63
 336:	cd bf       	out	0x3d, r28	; 61
 338:	cf 91       	pop	r28
 33a:	df 91       	pop	r29
 33c:	08 95       	ret

0000033e <itoa>:
 33e:	fb 01       	movw	r30, r22
 340:	9f 01       	movw	r18, r30
 342:	e8 94       	clt
 344:	42 30       	cpi	r20, 0x02	; 2
 346:	c4 f0       	brlt	.+48     	; 0x378 <itoa+0x3a>
 348:	45 32       	cpi	r20, 0x25	; 37
 34a:	b4 f4       	brge	.+44     	; 0x378 <itoa+0x3a>
 34c:	4a 30       	cpi	r20, 0x0A	; 10
 34e:	29 f4       	brne	.+10     	; 0x35a <itoa+0x1c>
 350:	97 fb       	bst	r25, 7
 352:	1e f4       	brtc	.+6      	; 0x35a <itoa+0x1c>
 354:	90 95       	com	r25
 356:	81 95       	neg	r24
 358:	9f 4f       	sbci	r25, 0xFF	; 255
 35a:	64 2f       	mov	r22, r20
 35c:	77 27       	eor	r23, r23
 35e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__udivmodhi4>
 362:	80 5d       	subi	r24, 0xD0	; 208
 364:	8a 33       	cpi	r24, 0x3A	; 58
 366:	0c f0       	brlt	.+2      	; 0x36a <itoa+0x2c>
 368:	89 5d       	subi	r24, 0xD9	; 217
 36a:	81 93       	st	Z+, r24
 36c:	cb 01       	movw	r24, r22
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	a1 f7       	brne	.-24     	; 0x35a <itoa+0x1c>
 372:	16 f4       	brtc	.+4      	; 0x378 <itoa+0x3a>
 374:	5d e2       	ldi	r21, 0x2D	; 45
 376:	51 93       	st	Z+, r21
 378:	10 82       	st	Z, r1
 37a:	c9 01       	movw	r24, r18
 37c:	0c 94 c8 01 	jmp	0x390	; 0x390 <strrev>

00000380 <__eerd_byte_m32>:
 380:	e1 99       	sbic	0x1c, 1	; 28
 382:	fe cf       	rjmp	.-4      	; 0x380 <__eerd_byte_m32>
 384:	9f bb       	out	0x1f, r25	; 31
 386:	8e bb       	out	0x1e, r24	; 30
 388:	e0 9a       	sbi	0x1c, 0	; 28
 38a:	99 27       	eor	r25, r25
 38c:	8d b3       	in	r24, 0x1d	; 29
 38e:	08 95       	ret

00000390 <strrev>:
 390:	dc 01       	movw	r26, r24
 392:	fc 01       	movw	r30, r24
 394:	67 2f       	mov	r22, r23
 396:	71 91       	ld	r23, Z+
 398:	77 23       	and	r23, r23
 39a:	e1 f7       	brne	.-8      	; 0x394 <strrev+0x4>
 39c:	32 97       	sbiw	r30, 0x02	; 2
 39e:	04 c0       	rjmp	.+8      	; 0x3a8 <strrev+0x18>
 3a0:	7c 91       	ld	r23, X
 3a2:	6d 93       	st	X+, r22
 3a4:	70 83       	st	Z, r23
 3a6:	62 91       	ld	r22, -Z
 3a8:	ae 17       	cp	r26, r30
 3aa:	bf 07       	cpc	r27, r31
 3ac:	c8 f3       	brcs	.-14     	; 0x3a0 <strrev+0x10>
 3ae:	08 95       	ret

000003b0 <__udivmodhi4>:
 3b0:	aa 1b       	sub	r26, r26
 3b2:	bb 1b       	sub	r27, r27
 3b4:	51 e1       	ldi	r21, 0x11	; 17
 3b6:	07 c0       	rjmp	.+14     	; 0x3c6 <__udivmodhi4_ep>

000003b8 <__udivmodhi4_loop>:
 3b8:	aa 1f       	adc	r26, r26
 3ba:	bb 1f       	adc	r27, r27
 3bc:	a6 17       	cp	r26, r22
 3be:	b7 07       	cpc	r27, r23
 3c0:	10 f0       	brcs	.+4      	; 0x3c6 <__udivmodhi4_ep>
 3c2:	a6 1b       	sub	r26, r22
 3c4:	b7 0b       	sbc	r27, r23

000003c6 <__udivmodhi4_ep>:
 3c6:	88 1f       	adc	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	5a 95       	dec	r21
 3cc:	a9 f7       	brne	.-22     	; 0x3b8 <__udivmodhi4_loop>
 3ce:	80 95       	com	r24
 3d0:	90 95       	com	r25
 3d2:	bc 01       	movw	r22, r24
 3d4:	cd 01       	movw	r24, r26
 3d6:	08 95       	ret

000003d8 <_exit>:
 3d8:	f8 94       	cli

000003da <__stop_program>:
 3da:	ff cf       	rjmp	.-2      	; 0x3da <__stop_program>
